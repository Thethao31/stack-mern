{"ast":null,"code":"import { FETCH_ALL, FETCH_BY_SEARCH, FETCH_POST, CREATE, UPDATE, DELETE, LIKE, COMMENT } from '../constants/actionTypes';\nexport default ((state = {\n  isLoading: true,\n  posts: []\n}, action) => {\n  switch (action.type) {\n    case 'START_LOADING':\n      return { ...state,\n        isLoading: true\n      };\n\n    case 'END_LOADING':\n      return { ...state,\n        isLoading: false\n      };\n\n    case FETCH_ALL:\n      return { ...state,\n        posts: action.payload.data,\n        currentPage: action.payload.currentPage,\n        numberOfPages: action.payload.numberOfPages\n      };\n\n    case FETCH_BY_SEARCH:\n      return { ...state,\n        posts: action.payload.data\n      };\n\n    case FETCH_POST:\n      return { ...state,\n        post: action.payload.post\n      };\n\n    case LIKE:\n      return { ...state,\n        posts: state.posts.map(post => post._id === action.payload._id ? action.payload : post)\n      };\n\n    case COMMENT:\n      return { ...state,\n        posts: state.posts.map(post => post._id === action.payload._id ? action.payload : post)\n      };\n\n    case CREATE:\n      return { ...state,\n        posts: [...state.posts, action.payload]\n      };\n\n    case UPDATE:\n      return { ...state,\n        posts: state.posts.map(post => post._id === action.payload._id ? action.payload : post)\n      };\n\n    case DELETE:\n      return { ...state,\n        posts: state.posts.filter(post => post._id !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/the/code/my_github/client/src/reducers/posts.js"],"names":["FETCH_ALL","FETCH_BY_SEARCH","FETCH_POST","CREATE","UPDATE","DELETE","LIKE","COMMENT","state","isLoading","posts","action","type","payload","data","currentPage","numberOfPages","post","map","_id","filter"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,eAApB,EAAqCC,UAArC,EAAiDC,MAAjD,EAAyDC,MAAzD,EAAiEC,MAAjE,EAAyEC,IAAzE,EAA+EC,OAA/E,QAA8F,0BAA9F;AAEA,gBAAe,CAACC,KAAK,GAAG;AAAEC,EAAAA,SAAS,EAAE,IAAb;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CAAT,EAAyCC,MAAzC,KAAoD;AAC/D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,eAAL;AACI,aAAO,EAAE,GAAGJ,KAAL;AAAYC,QAAAA,SAAS,EAAE;AAAvB,OAAP;;AAEJ,SAAK,aAAL;AACI,aAAO,EAAE,GAAGD,KAAL;AAAYC,QAAAA,SAAS,EAAE;AAAvB,OAAP;;AAEJ,SAAKT,SAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHE,QAAAA,KAAK,EAAEC,MAAM,CAACE,OAAP,CAAeC,IAFnB;AAGHC,QAAAA,WAAW,EAAEJ,MAAM,CAACE,OAAP,CAAeE,WAHzB;AAIHC,QAAAA,aAAa,EAAEL,MAAM,CAACE,OAAP,CAAeG;AAJ3B,OAAP;;AAOJ,SAAKf,eAAL;AACI,aAAO,EAAE,GAAGO,KAAL;AAAYE,QAAAA,KAAK,EAAEC,MAAM,CAACE,OAAP,CAAeC;AAAlC,OAAP;;AAEJ,SAAKZ,UAAL;AACI,aAAO,EAAE,GAAGM,KAAL;AAAYS,QAAAA,IAAI,EAAEN,MAAM,CAACE,OAAP,CAAeI;AAAjC,OAAP;;AAEJ,SAAKX,IAAL;AACI,aAAO,EACH,GAAGE,KADA;AAEHE,QAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYQ,GAAZ,CAAiBD,IAAD,IACnBA,IAAI,CAACE,GAAL,KAAaR,MAAM,CAACE,OAAP,CAAeM,GAA5B,GAAkCR,MAAM,CAACE,OAAzC,GAAmDI,IADhD;AAFJ,OAAP;;AAOJ,SAAKV,OAAL;AACI,aAAO,EACH,GAAGC,KADA;AAEHE,QAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYQ,GAAZ,CAAiBD,IAAD,IACnBA,IAAI,CAACE,GAAL,KAAaR,MAAM,CAACE,OAAP,CAAeM,GAA5B,GAAkCR,MAAM,CAACE,OAAzC,GAAmDI,IADhD;AAFJ,OAAP;;AAOJ,SAAKd,MAAL;AACI,aAAO,EAAE,GAAGK,KAAL;AAAYE,QAAAA,KAAK,EAAE,CAAC,GAAGF,KAAK,CAACE,KAAV,EAAiBC,MAAM,CAACE,OAAxB;AAAnB,OAAP;;AAEJ,SAAKT,MAAL;AACI,aAAO,EAAE,GAAGI,KAAL;AAAYE,QAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYQ,GAAZ,CAAiBD,IAAD,IAAWA,IAAI,CAACE,GAAL,KAAaR,MAAM,CAACE,OAAP,CAAeM,GAA5B,GAAkCR,MAAM,CAACE,OAAzC,GAAmDI,IAA9E;AAAnB,OAAP;;AAEJ,SAAKZ,MAAL;AACI,aAAO,EAAE,GAAGG,KAAL;AAAYE,QAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYU,MAAZ,CAAoBH,IAAD,IAAUA,IAAI,CAACE,GAAL,KAAaR,MAAM,CAACE,OAAjD;AAAnB,OAAP;;AAEJ;AACI,aAAOL,KAAP;AA/CR;AAiDH,CAlDD","sourcesContent":["import { FETCH_ALL, FETCH_BY_SEARCH, FETCH_POST, CREATE, UPDATE, DELETE, LIKE, COMMENT } from '../constants/actionTypes'\n\nexport default (state = { isLoading: true, posts: [] }, action) => {\n    switch (action.type) {\n        case 'START_LOADING':\n            return { ...state, isLoading: true }\n\n        case 'END_LOADING':\n            return { ...state, isLoading: false }\n\n        case FETCH_ALL:\n            return {\n                ...state,\n                posts: action.payload.data,\n                currentPage: action.payload.currentPage,\n                numberOfPages: action.payload.numberOfPages,\n            }\n\n        case FETCH_BY_SEARCH:\n            return { ...state, posts: action.payload.data }\n\n        case FETCH_POST:\n            return { ...state, post: action.payload.post }\n\n        case LIKE:\n            return { \n                ...state, \n                posts: state.posts.map((post) => (\n                    post._id === action.payload._id ? action.payload : post\n                ))\n            }\n\n        case COMMENT:\n            return {\n                ...state, \n                posts: state.posts.map((post) => (\n                    post._id === action.payload._id ? action.payload : post\n                ))\n            }\n\n        case CREATE:\n            return { ...state, posts: [...state.posts, action.payload] }\n\n        case UPDATE:\n            return { ...state, posts: state.posts.map((post) => (post._id === action.payload._id ? action.payload : post)) }\n\n        case DELETE:\n            return { ...state, posts: state.posts.filter((post) => post._id !== action.payload) }\n\n        default:\n            return state\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}