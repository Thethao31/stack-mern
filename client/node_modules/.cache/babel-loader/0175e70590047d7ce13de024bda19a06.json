{"ast":null,"code":"var _jsxFileName = \"/home/the/code/my_github/client/src/components/PostDetails/PostDetails.jsx\";\nimport React, { useEffect } from 'react';\nimport { Paper, Typography, CircularProgress, Divider } from '@material-ui/core/';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { getPost, getPostsBySearch } from '../../actions/posts';\nimport CommentSection from './CommentSection';\nimport useStyles from './styles';\n\nconst Post = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n  const {\n    post,\n    posts,\n    isLoading\n  } = useSelector(state => state.posts); // lấy ra cái postId\n\n  useEffect(() => {\n    dispatch(getPost(id));\n  }, [dispatch, id]); // nếu là post thì tìm ra những bài post cái tag liên quan\n\n  useEffect(() => {\n    if (post) {\n      // tại sao phải cho search: 'none' vào vì ở đây ko tìm kiếm gì cả\n      dispatch(getPostsBySearch({\n        search: 'none',\n        tags: post === null || post === void 0 ? void 0 : post.tags.join(',')\n      }));\n    }\n  }, [dispatch, post]); // kiểm tra\n\n  if (!post) return null; // lấy ra những bài post liên quan\n\n  const openPost = _id => history.push(`/posts/${_id}`); // ko có bài post nào sẽ loading\n\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(Paper, {\n      elevation: 6,\n      className: classes.loadingPaper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      size: \"7em\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }));\n  } // tìm ra bài post liên quan \n\n\n  const recommendedPosts = posts.filter(({\n    _id\n  }) => _id !== post._id);\n  return /*#__PURE__*/React.createElement(Paper, {\n    style: {\n      padding: '20px',\n      borderRadius: '15px'\n    },\n    elevation: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.section,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h3\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, post.title), /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h6\",\n    color: \"textSecondary\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, post.tags.map(tag => `#${tag} `)), /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"body1\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, post.message), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, \"Created by: \", post.name), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, moment(post.createdAt).fromNow()), /*#__PURE__*/React.createElement(Divider, {\n    style: {\n      margin: '20px 0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 49\n    }\n  }, \"Realtime Chat - coming soon!\")), /*#__PURE__*/React.createElement(Divider, {\n    style: {\n      margin: '20px 0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(CommentSection, {\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    style: {\n      margin: '20px 0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.imageSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.media,\n    src: post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png',\n    alt: post.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }))), !!recommendedPosts.length && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.section,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, \"You might also like:\"), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.recommendedPosts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, recommendedPosts.map(({\n    title,\n    name,\n    message,\n    likes,\n    selectedFile,\n    _id\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: '20px',\n      cursor: 'pointer'\n    },\n    onClick: () => openPost(_id),\n    key: _id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 33\n    }\n  }, title), /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"subtitle2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 33\n    }\n  }, name), /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"subtitle2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 33\n    }\n  }, message), /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 33\n    }\n  }, \"Likes: \", likes.length), /*#__PURE__*/React.createElement(\"img\", {\n    src: selectedFile,\n    width: \"200px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 33\n    }\n  }))))));\n};\n\nexport default Post;","map":{"version":3,"sources":["/home/the/code/my_github/client/src/components/PostDetails/PostDetails.jsx"],"names":["React","useEffect","Paper","Typography","CircularProgress","Divider","useDispatch","useSelector","moment","useParams","useHistory","getPost","getPostsBySearch","CommentSection","useStyles","Post","classes","dispatch","history","id","post","posts","isLoading","state","search","tags","join","openPost","_id","push","loadingPaper","recommendedPosts","filter","padding","borderRadius","card","section","title","map","tag","message","name","createdAt","fromNow","margin","imageSection","media","selectedFile","length","likes","cursor"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { Paper, Typography, CircularProgress, Divider } from '@material-ui/core/'\nimport { useDispatch, useSelector } from 'react-redux'\nimport moment from 'moment'\nimport { useParams, useHistory } from 'react-router-dom'\n\nimport { getPost, getPostsBySearch } from '../../actions/posts'\nimport CommentSection from './CommentSection'\nimport useStyles from './styles'\n\nconst Post = () => {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const { id } = useParams()\n\n    const { post, posts, isLoading } = useSelector((state) => state.posts)\n\n    // lấy ra cái postId\n    useEffect(() => {\n        dispatch(getPost(id))\n    }, [dispatch, id])\n\n    // nếu là post thì tìm ra những bài post cái tag liên quan\n    useEffect(() => {\n        if (post) {\n            // tại sao phải cho search: 'none' vào vì ở đây ko tìm kiếm gì cả\n            dispatch(getPostsBySearch({ search: 'none', tags: post?.tags.join(',') }))\n        }\n    }, [dispatch, post])\n\n    // kiểm tra\n    if (!post) return null\n\n    // lấy ra những bài post liên quan\n    const openPost = (_id) => history.push(`/posts/${_id}`)\n\n    // ko có bài post nào sẽ loading\n    if (isLoading) {\n        return (\n            <Paper elevation={6} className={classes.loadingPaper}>\n                <CircularProgress size=\"7em\" />\n            </Paper>\n        )\n    }\n\n    // tìm ra bài post liên quan \n    const recommendedPosts = posts.filter(({ _id }) => _id !== post._id)\n\n    return (\n        <Paper style={{ padding: '20px', borderRadius: '15px' }} elevation={6}>\n            <div className={classes.card}>\n                <div className={classes.section}>\n                    <Typography variant=\"h3\" component=\"h2\">{post.title}</Typography>\n                    <Typography gutterBottom variant=\"h6\" color=\"textSecondary\" component=\"h2\">\n                        {post.tags.map((tag) => `#${tag} `)}\n                    </Typography>\n                    <Typography gutterBottom variant=\"body1\" component=\"p\">{post.message}</Typography>\n                    <Typography variant=\"h6\">Created by: {post.name}</Typography>\n                    <Typography variant=\"body1\">{moment(post.createdAt).fromNow()}</Typography>\n                    <Divider style={{ margin: '20px 0' }} />\n                    <Typography variant=\"body1\"><strong>Realtime Chat - coming soon!</strong></Typography>\n                    <Divider style={{ margin: '20px 0' }} />\n                    <CommentSection post={post} />\n                    <Divider style={{ margin: '20px 0' }} />\n                </div>\n                <div className={classes.imageSection}>\n                    <img \n                        className={classes.media} \n                        src={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} \n                        alt={post.title} \n                    />\n                </div>\n            </div>\n            {!!recommendedPosts.length && (\n                <div className={classes.section}>\n                    <Typography gutterBottom variant=\"h5\">You might also like:</Typography>\n                    <Divider />\n                    <div className={classes.recommendedPosts}>\n                        {recommendedPosts.map(({ title, name, message, likes, selectedFile, _id }) => (\n                            <div style={{ margin: '20px', cursor: 'pointer' }} onClick={() => openPost(_id)} key={_id}>\n                                <Typography gutterBottom variant=\"h6\">{title}</Typography>\n                                <Typography gutterBottom variant=\"subtitle2\">{name}</Typography>\n                                <Typography gutterBottom variant=\"subtitle2\">{message}</Typography>\n                                <Typography gutterBottom variant=\"subtitle1\">Likes: {likes.length}</Typography>\n                                <img src={selectedFile} width=\"200px\" />\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            )}\n        </Paper>\n    )\n}\n\nexport default Post\n"]},"metadata":{},"sourceType":"module"}