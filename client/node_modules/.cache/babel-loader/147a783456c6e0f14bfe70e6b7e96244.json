{"ast":null,"code":"var _jsxFileName = \"/home/the/code/my_github/client/src/components/Auth/Auth.js\";\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport { GoogleLogin } from 'react-google-login';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Icon from './icon';\nimport { signin, signup } from '../../actions/auth';\nimport { AUTH } from '../../constants/actionTypes';\nimport useStyles from './styles';\nimport Input from './Input';\nconst initialState = {\n  firstName: '',\n  lastName: '',\n  email: '',\n  password: '',\n  confirmPassword: ''\n};\n\nconst SignUp = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const classes = useStyles();\n  const [form, setForm] = useState(initialState);\n  const [isSignup, setIsSignup] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleShowPassword = () => setShowPassword(!showPassword); // toggle signin và signup  \n\n\n  const switchMode = () => {\n    setForm(initialState); // setIsSignup((prevIsSignup) => !prevIsSignup)\n\n    setIsSignup(!isSignup);\n    setShowPassword(false);\n  }; // button đăng kí đăng nhập\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (isSignup) {\n      dispatch(signup(form, history));\n    } else {\n      dispatch(signin(form, history));\n    }\n  }; // đằng nhập gg thành công\n\n\n  const googleSuccess = async res => {\n    const result = res === null || res === void 0 ? void 0 : res.profileObj;\n    const token = res === null || res === void 0 ? void 0 : res.tokenId;\n\n    try {\n      dispatch({\n        type: AUTH,\n        data: {\n          result,\n          token\n        }\n      });\n      history.push('/');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const googleError = () => console.log('Google Sign In was unsuccessful. Try again later'); // lấy thông tin khi user gõ vào đăng kí đăng nhập\n\n\n  const handleChange = e => setForm({ ...form,\n    [e.target.name]: e.target.value\n  });\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    elevation: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(LockOutlinedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, isSignup ? 'Sign up' : 'Sign in'), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, isSignup && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Input, {\n    name: \"firstName\",\n    label: \"First Name\",\n    handleChange: handleChange,\n    autoFocus: true,\n    half: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"lastName\",\n    label: \"Last Name\",\n    handleChange: handleChange,\n    half: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Input, {\n    name: \"email\",\n    label: \"Email Address\",\n    handleChange: handleChange,\n    type: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"password\",\n    label: \"Password\",\n    handleChange: handleChange,\n    type: showPassword ? 'text' : 'password',\n    handleShowPassword: handleShowPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  }), isSignup && /*#__PURE__*/React.createElement(Input, {\n    name: \"confirmPassword\",\n    label: \"Repeat Password\",\n    handleChange: handleChange,\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 39\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, isSignup ? 'Sign Up' : 'Sign In'), /*#__PURE__*/React.createElement(GoogleLogin, {\n    clientId: \"564033717568-bu2nr1l9h31bhk9bff4pqbenvvoju3oq.apps.googleusercontent.com\",\n    render: renderProps => /*#__PURE__*/React.createElement(Button, {\n      className: classes.googleButton,\n      color: \"primary\",\n      fullWidth: true,\n      onClick: renderProps.onClick,\n      disabled: renderProps.disabled,\n      startIcon: /*#__PURE__*/React.createElement(Icon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 40\n        }\n      }),\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }\n    }, \"Google Sign In\"),\n    onSuccess: googleSuccess,\n    onFailure: googleError,\n    cookiePolicy: \"single_host_origin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: switchMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 29\n    }\n  }, isSignup ? 'Already have an account? Sign in' : \"Don't have an account? Sign Up\"))))));\n};\n\nexport default SignUp;","map":{"version":3,"sources":["/home/the/code/my_github/client/src/components/Auth/Auth.js"],"names":["React","useState","useDispatch","Avatar","Button","Paper","Grid","Typography","Container","useHistory","GoogleLogin","LockOutlinedIcon","Icon","signin","signup","AUTH","useStyles","Input","initialState","firstName","lastName","email","password","confirmPassword","SignUp","dispatch","history","classes","form","setForm","isSignup","setIsSignup","showPassword","setShowPassword","handleShowPassword","switchMode","handleSubmit","e","preventDefault","googleSuccess","res","result","profileObj","token","tokenId","type","data","push","error","console","log","googleError","handleChange","target","name","value","paper","avatar","submit","renderProps","googleButton","onClick","disabled"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core'\nimport { useHistory } from 'react-router-dom'\nimport { GoogleLogin } from 'react-google-login'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\n\nimport Icon from './icon'\nimport { signin, signup } from '../../actions/auth'\nimport { AUTH } from '../../constants/actionTypes'\nimport useStyles from './styles'\nimport Input from './Input'\n\nconst initialState = { firstName: '', lastName: '', email: '', password: '', confirmPassword: '' }\n\nconst SignUp = () => {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const classes = useStyles()\n    \n    const [form, setForm] = useState(initialState)\n    const [isSignup, setIsSignup] = useState(false)\n\n    const [showPassword, setShowPassword] = useState(false)\n    const handleShowPassword = () => setShowPassword(!showPassword)\n\n    // toggle signin và signup  \n    const switchMode = () => {\n        setForm(initialState)\n        // setIsSignup((prevIsSignup) => !prevIsSignup)\n        setIsSignup(!isSignup)\n        setShowPassword(false)\n    }\n\n    // button đăng kí đăng nhập\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        if (isSignup) {\n            dispatch(signup(form, history))\n        } else {\n            dispatch(signin(form, history))\n        }\n    }\n\n    // đằng nhập gg thành công\n    const googleSuccess = async (res) => {\n        const result = res?.profileObj\n        const token = res?.tokenId\n\n        try {\n            dispatch({ type: AUTH, data: { result, token } })\n\n            history.push('/')\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    const googleError = () => console.log('Google Sign In was unsuccessful. Try again later')\n\n    // lấy thông tin khi user gõ vào đăng kí đăng nhập\n    const handleChange = e => setForm({ ...form, [e.target.name]: e.target.value })\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <Paper className={classes.paper} elevation={6}>\n                <Avatar className={classes.avatar}>\n                <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">{ isSignup ? 'Sign up' : 'Sign in' }</Typography>\n                <form className={classes.form} onSubmit={handleSubmit}>\n                    <Grid container spacing={2}>\n                        { isSignup && (\n                            <>\n                                <Input name=\"firstName\" label=\"First Name\" handleChange={handleChange} autoFocus half />\n                                <Input name=\"lastName\" label=\"Last Name\" handleChange={handleChange} half />\n                            </>\n                        )}\n                        <Input \n                            name=\"email\" \n                            label=\"Email Address\" \n                            handleChange={handleChange} \n                            type=\"email\" \n                        />\n                        <Input \n                            name=\"password\" \n                            label=\"Password\" \n                            handleChange={handleChange} \n                            type={showPassword ? 'text' : 'password'} \n                            handleShowPassword={handleShowPassword} \n                        />\n                        { isSignup && <Input name=\"confirmPassword\" label=\"Repeat Password\" handleChange={handleChange} type=\"password\" /> }\n                    </Grid>\n                    <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\n                        { isSignup ? 'Sign Up' : 'Sign In' }\n                    </Button>\n                    <GoogleLogin\n                        clientId=\"564033717568-bu2nr1l9h31bhk9bff4pqbenvvoju3oq.apps.googleusercontent.com\"\n                        render={(renderProps) => (\n                        <Button \n                            className={classes.googleButton} \n                            color=\"primary\" \n                            fullWidth \n                            onClick={renderProps.onClick} \n                            disabled={renderProps.disabled} \n                            startIcon={<Icon />} \n                            variant=\"contained\">\n                            Google Sign In\n                        </Button>\n                        )}\n                        onSuccess={googleSuccess}\n                        onFailure={googleError}\n                        cookiePolicy=\"single_host_origin\"\n                    />\n                    <Grid container justify=\"flex-end\">\n                        <Grid item>\n                                \n                            <Button onClick={switchMode}>\n                                { isSignup ? 'Already have an account? Sign in' : \"Don't have an account? Sign Up\" }\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </form>\n            </Paper>\n        </Container>\n    )\n}\n\nexport default SignUp\n"]},"metadata":{},"sourceType":"module"}