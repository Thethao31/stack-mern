{"ast":null,"code":"var _jsxFileName = \"/home/the/code/my_github/client/src/components/Form/Form.js\";\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\nimport { useHistory } from 'react-router-dom';\nimport ChipInput from 'material-ui-chip-input';\nimport { createPost, updatePost } from '../../actions/posts';\nimport useStyles from './styles';\n\nconst Form = ({\n  currentId,\n  setCurrentId\n}) => {\n  var _user$result3;\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const history = useHistory();\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const initStateData = {\n    title: '',\n    message: '',\n    tags: [],\n    selectedFile: ''\n  };\n  const [postData, setPostData] = useState(initStateData); // lấy cái postId đó để update\n\n  const post = useSelector(state => currentId ? state.posts.posts.find(message => message._id === currentId) : null); // clear gõ trên input và postId\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData(initStateData);\n  }; // hàm chjay khi rerender để kiểm tra hết hạn đăng nhập chưa\n\n\n  useEffect(() => {\n    if (!(post === null || post === void 0 ? void 0 : post.title)) clear();\n    if (post) setPostData(post);\n  }, [post]); // thêm hoặc chỉnh sửa bài post\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      var _user$result;\n\n      dispatch(createPost({ ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name\n      }, history.push('/')));\n      clear();\n    } else {\n      var _user$result2;\n\n      dispatch(updatePost(currentId, { ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2.name\n      }));\n      clear();\n    }\n  }; // check xem đã đăng nhập chưa\n\n\n  if (!(user === null || user === void 0 ? void 0 : (_user$result3 = user.result) === null || _user$result3 === void 0 ? void 0 : _user$result3.name)) {\n    return /*#__PURE__*/React.createElement(Paper, {\n      className: classes.paper,\n      elevation: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, \"Please Sign In to create your own memories and like other's memories.\"));\n  } // thêm các tags\n\n\n  const handleAddChip = tag => {\n    setPostData({ ...postData,\n      tags: [...postData.tags, tag]\n    });\n  }; // xóa các tags\n\n\n  const handleDeleteChip = chipToDelete => {\n    setPostData({ ...postData,\n      tags: postData.tags.filter(tag => tag !== chipToDelete)\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    elevation: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    className: `${classes.root} ${classes.form}`,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, currentId ? `Editing \"${post === null || post === void 0 ? void 0 : post.title}\"` : 'Creating a Memory'), /*#__PURE__*/React.createElement(TextField, {\n    name: \"title\",\n    variant: \"outlined\",\n    label: \"Title\",\n    fullWidth: true,\n    value: postData.title,\n    onChange: e => setPostData({ ...postData,\n      title: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"message\",\n    variant: \"outlined\",\n    label: \"Message\",\n    fullWidth: true,\n    multiline: true,\n    rows: 4,\n    value: postData.message,\n    onChange: e => setPostData({ ...postData,\n      message: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '5px 0',\n      width: '94%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ChipInput, {\n    name: \"tags\",\n    variant: \"outlined\",\n    label: \"Tags\",\n    fullWidth: true,\n    value: postData.tags,\n    onAdd: chip => handleAddChip(chip),\n    onDelete: chip => handleDeleteChip(chip),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.fileInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FileBase, {\n    type: \"file\",\n    multiple: false,\n    onDone: ({\n      base64\n    }) => setPostData({ ...postData,\n      selectedFile: base64\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 51\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttonSubmit,\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    type: \"submit\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    size: \"small\",\n    onClick: clear,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, \"Clear\")));\n};\n\nexport default Form;","map":{"version":3,"sources":["/home/the/code/my_github/client/src/components/Form/Form.js"],"names":["React","useState","useEffect","TextField","Button","Typography","Paper","useDispatch","useSelector","FileBase","useHistory","ChipInput","createPost","updatePost","useStyles","Form","currentId","setCurrentId","dispatch","classes","history","user","JSON","parse","localStorage","getItem","initStateData","title","message","tags","selectedFile","postData","setPostData","post","state","posts","find","_id","clear","handleSubmit","e","preventDefault","name","result","push","paper","handleAddChip","tag","handleDeleteChip","chipToDelete","filter","root","form","target","value","padding","width","chip","fileInput","base64","buttonSubmit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { TextField, Button, Typography, Paper } from '@material-ui/core'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FileBase from 'react-file-base64'\nimport { useHistory } from 'react-router-dom'\nimport ChipInput from 'material-ui-chip-input'\n\nimport { createPost, updatePost } from '../../actions/posts'\nimport useStyles from './styles'\n\nconst Form = ({ currentId, setCurrentId }) => {\n    const dispatch = useDispatch()\n    const classes = useStyles()\n    const history = useHistory()\n\n    const user = JSON.parse(localStorage.getItem('profile'))\n\n    const initStateData = {\n        title: '', message: '', tags: [], selectedFile: ''\n    }\n    const [postData, setPostData] = useState(initStateData)\n\n    // lấy cái postId đó để update\n    const post = useSelector((state) => (\n        currentId ? state.posts.posts.find((message) => \n            message._id === currentId) : null\n        )\n    )\n\n    // clear gõ trên input và postId\n    const clear = () => {\n        setCurrentId(0)\n        setPostData(initStateData)\n    }\n\n    // hàm chjay khi rerender để kiểm tra hết hạn đăng nhập chưa\n    useEffect(() => {\n        if (!post?.title) clear()\n        if (post) setPostData(post)\n    }, [post])\n\n    // thêm hoặc chỉnh sửa bài post\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n\n        if (currentId === 0) {\n            dispatch(createPost({ ...postData, name: user?.result?.name }, history.push('/')))\n            clear()\n        } else {\n            dispatch(updatePost(currentId, { ...postData, name: user?.result?.name }))\n            clear()\n        }\n    }\n\n    // check xem đã đăng nhập chưa\n    if (!user?.result?.name) {\n        return (\n            <Paper className={classes.paper} elevation={6}>\n                <Typography variant=\"h6\" align=\"center\">\n                    Please Sign In to create your own memories and like other's memories.\n                </Typography>\n            </Paper>\n        )\n    }\n\n    // thêm các tags\n    const handleAddChip = (tag) => {\n        setPostData({ ...postData, tags: [...postData.tags, tag] })\n    }\n\n    // xóa các tags\n    const handleDeleteChip = (chipToDelete) => {\n        setPostData({ ...postData, tags: postData.tags.filter((tag) => tag !== chipToDelete) })\n    }\n\n    return (\n        <Paper className={classes.paper} elevation={6}>\n            <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n                <Typography variant=\"h6\">{currentId ? `Editing \"${post?.title}\"` : 'Creating a Memory'}</Typography>\n                <TextField \n                    name=\"title\" \n                    variant=\"outlined\" \n                    label=\"Title\" \n                    fullWidth \n                    value={postData.title} \n                    onChange={(e) => setPostData({ ...postData, title: e.target.value })} \n                />\n                <TextField \n                    name=\"message\" \n                    variant=\"outlined\" \n                    label=\"Message\" \n                    fullWidth \n                    multiline \n                    rows={4} \n                    value={postData.message} \n                    onChange={(e) => setPostData({ ...postData, message: e.target.value })} \n                />\n                <div style={{ padding: '5px 0', width: '94%' }}>\n                    <ChipInput\n                        name=\"tags\"\n                        variant=\"outlined\"\n                        label=\"Tags\"\n                        fullWidth\n                        value={postData.tags}\n                        onAdd={(chip) => handleAddChip(chip)}\n                        onDelete={(chip) => handleDeleteChip(chip)}\n                    />\n                </div>\n                <div \n                    className={classes.fileInput}><FileBase \n                    type=\"file\" \n                    multiple={false} \n                    onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} />\n                </div>\n                <Button \n                    className={classes.buttonSubmit} \n                    variant=\"contained\" \n                    color=\"primary\" \n                    size=\"large\" \n                    type=\"submit\" \n                    fullWidth>\n                    Submit\n                </Button>\n                <Button \n                    variant=\"contained\" \n                    color=\"secondary\" \n                    size=\"small\" \n                    onClick={clear} \n                    fullWidth>\n                    Clear\n                </Button>\n            </form>\n        </Paper>\n    )\n}\n\nexport default Form\n"]},"metadata":{},"sourceType":"module"}