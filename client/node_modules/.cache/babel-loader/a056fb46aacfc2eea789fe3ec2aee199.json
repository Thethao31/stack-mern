{"ast":null,"code":"var _jsxFileName = \"/home/the/code/my_github/StackMERN/client/src/components/Posts/Post/Post.js\";\nimport React, { useState } from 'react';\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography, ButtonBase } from '@material-ui/core/';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ThumbUpAltOutlined from '@material-ui/icons/ThumbUpAltOutlined';\nimport { useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport { useHistory } from 'react-router-dom';\nimport { likePost, deletePost } from '../../../actions/posts';\nimport useStyles from './styles'; // import { getPost } from '../../../../../server/controllers/posts'\n\nconst Post = ({\n  post,\n  setCurrentId\n}) => {\n  var _user$result, _post$likes, _user$result2, _user$result3, _user$result4, _user$result5;\n\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const classes = useStyles();\n  const [likes, setLikes] = useState(post === null || post === void 0 ? void 0 : post.likes); // lấy userId từ gg hoặc tự nhập\n\n  const userId = (user === null || user === void 0 ? void 0 : user.result.googleId) || (user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result._id);\n  const hasLikedPost = post === null || post === void 0 ? void 0 : (_post$likes = post.likes) === null || _post$likes === void 0 ? void 0 : _post$likes.find(like => like === userId); // click like\n\n  const handleLike = async () => {\n    dispatch(likePost(post._id));\n\n    if (hasLikedPost) {\n      // nếu like rồi thì xóa dislike\n      setLikes(post.likes.filter(id => id !== userId));\n    } else {\n      // like\n      setLikes([...post.likes, userId]);\n    }\n  }; // nút like\n\n\n  const Likes = () => {\n    if (likes.length > 0) {\n      return likes.find(like => like === userId) ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ThumbUpAltIcon, {\n        fontSize: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }\n      }), likes.length > 2 ? `You and ${likes.length - 1} others` : `${likes.length} like${likes.length > 1 ? 's' : ''}`) :\n      /*#__PURE__*/\n      // nhiều người like\n      React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ThumbUpAltOutlined, {\n        fontSize: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }), likes.length, likes.length === 1 ? 'Like' : 'Likes');\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ThumbUpAltOutlined, {\n      fontSize: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 18\n      }\n    }), \"Like\");\n  }; // mở post detail\n\n\n  const openPost = e => {\n    // dispatch(getPosts(post._id, history.push(`/posts/${post._id}`)))\n    history.push(`/posts/${post._id}`);\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    className: classes.card,\n    raised: true,\n    elevation: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ButtonBase, {\n    component: \"span\",\n    name: \"test\",\n    className: classes.cardAction,\n    onClick: openPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardMedia, {\n    className: classes.media,\n    image: post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png',\n    title: post.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.overlay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, post.name), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, moment(post.createdAt).fromNow())), ((user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2.googleId) === (post === null || post === void 0 ? void 0 : post.creator) || (user === null || user === void 0 ? void 0 : (_user$result3 = user.result) === null || _user$result3 === void 0 ? void 0 : _user$result3._id) === (post === null || post === void 0 ? void 0 : post.creator)) && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.overlay2,\n    name: \"edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: e => {\n      e.stopPropagation();\n      setCurrentId(post._id);\n    },\n    style: {\n      color: 'white'\n    },\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(MoreHorizIcon, {\n    fontSize: \"default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.details,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, post.tags.map(tag => `#${tag} `))), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, post.title), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, post.message.split(' ').splice(0, 20).join(' '), \"...\"))), /*#__PURE__*/React.createElement(CardActions, {\n    className: classes.cardActions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    color: \"primary\",\n    disabled: !(user === null || user === void 0 ? void 0 : user.result),\n    onClick: handleLike,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Likes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  })), ((user === null || user === void 0 ? void 0 : (_user$result4 = user.result) === null || _user$result4 === void 0 ? void 0 : _user$result4.googleId) === (post === null || post === void 0 ? void 0 : post.creator) || (user === null || user === void 0 ? void 0 : (_user$result5 = user.result) === null || _user$result5 === void 0 ? void 0 : _user$result5._id) === (post === null || post === void 0 ? void 0 : post.creator)) && /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    color: \"secondary\",\n    onClick: () => dispatch(deletePost(post._id)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DeleteIcon, {\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 25\n    }\n  }), \"Delete\")));\n};\n\nexport default Post;","map":{"version":3,"sources":["/home/the/code/my_github/StackMERN/client/src/components/Posts/Post/Post.js"],"names":["React","useState","Card","CardActions","CardContent","CardMedia","Button","Typography","ButtonBase","ThumbUpAltIcon","DeleteIcon","MoreHorizIcon","ThumbUpAltOutlined","useDispatch","moment","useHistory","likePost","deletePost","useStyles","Post","post","setCurrentId","user","JSON","parse","localStorage","getItem","dispatch","history","classes","likes","setLikes","userId","result","googleId","_id","hasLikedPost","find","like","handleLike","filter","id","Likes","length","openPost","e","push","card","cardAction","media","selectedFile","title","overlay","name","createdAt","fromNow","creator","overlay2","stopPropagation","color","details","tags","map","tag","message","split","splice","join","cardActions"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography, ButtonBase } from '@material-ui/core/'\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz'\nimport ThumbUpAltOutlined from '@material-ui/icons/ThumbUpAltOutlined'\nimport { useDispatch } from 'react-redux'\nimport moment from 'moment'\nimport { useHistory } from 'react-router-dom'\n\nimport { likePost, deletePost } from '../../../actions/posts'\nimport useStyles from './styles'\n// import { getPost } from '../../../../../server/controllers/posts'\n\nconst Post = ({ post, setCurrentId }) => {\n    const user = JSON.parse(localStorage.getItem('profile'))\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const classes = useStyles()\n    const [likes, setLikes] = useState(post?.likes)\n\n    // lấy userId từ gg hoặc tự nhập\n    const userId = user?.result.googleId || user?.result?._id\n    const hasLikedPost = post?.likes?.find((like) => like === userId)\n\n    // click like\n    const handleLike = async () => {\n        dispatch(likePost(post._id))\n\n        if (hasLikedPost) {\n            // nếu like rồi thì xóa dislike\n            setLikes(post.likes.filter((id) => id !== userId))\n        } else {\n            // like\n            setLikes([...post.likes, userId])\n        }\n    }\n\n    // nút like\n    const Likes = () => {\n        if (likes.length > 0) {\n        return likes.find((like) => like === userId)\n            ? (\n            <>\n                <ThumbUpAltIcon fontSize=\"small\" />\n                {likes.length > 2 ? \n                    `You and ${likes.length - 1} others` \n                    : \n                    `${likes.length} like${likes.length > 1 ? 's' : ''}` \n                }\n            </>\n            ) : (\n                // nhiều người like\n            <>\n                <ThumbUpAltOutlined fontSize=\"small\" />\n                {likes.length} \n                {likes.length === 1 ? 'Like' : 'Likes'}\n            </>\n            )\n        }\n\n        return <><ThumbUpAltOutlined fontSize=\"small\" />Like</>\n    }\n\n    // mở post detail\n    const openPost = (e) => {\n        // dispatch(getPosts(post._id, history.push(`/posts/${post._id}`)))\n\n        history.push(`/posts/${post._id}`)\n    }\n\n    return (\n        <Card className={classes.card} raised elevation={6}>\n            <ButtonBase\n                component=\"span\"\n                name=\"test\"\n                className={classes.cardAction}\n                onClick={openPost}\n            >\n                <CardMedia \n                    className={classes.media} \n                    image={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} \n                    title={post.title} \n                />\n                <div className={classes.overlay}>\n                    <Typography variant=\"h6\">{post.name}</Typography>\n                    <Typography variant=\"body2\">{moment(post.createdAt).fromNow()}</Typography>\n                </div>\n                {(user?.result?.googleId === post?.creator || user?.result?._id === post?.creator) && (\n                    <div className={classes.overlay2} name=\"edit\">\n                        <Button\n                            onClick={(e) => {\n                            e.stopPropagation()\n                            setCurrentId(post._id)\n                            }}\n                            style={{ color: 'white' }}\n                            size=\"small\"\n                        >\n                            <MoreHorizIcon fontSize=\"default\" />\n                        </Button>\n                    </div>\n                )}\n                <div className={classes.details}>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">{post.tags.map((tag) => `#${tag} `)}</Typography>\n                </div>\n                <Typography className={classes.title} gutterBottom variant=\"h5\" component=\"h2\">{post.title}</Typography>\n                <CardContent>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{post.message.split(' ').splice(0, 20).join(' ')}...</Typography>\n                </CardContent>\n            </ButtonBase>\n            <CardActions className={classes.cardActions}>\n                <Button size=\"small\" color=\"primary\" disabled={!user?.result} onClick={handleLike}>\n                    <Likes />\n                </Button>\n                {(user?.result?.googleId === post?.creator || user?.result?._id === post?.creator) && (\n                    <Button size=\"small\" color=\"secondary\" onClick={() => dispatch(deletePost(post._id))}>\n                        <DeleteIcon fontSize=\"small\" />Delete\n                    </Button>\n                )}\n            </CardActions>\n        </Card>\n    )\n}\n\nexport default Post\n"]},"metadata":{},"sourceType":"module"}