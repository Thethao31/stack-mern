{"ast":null,"code":"var _jsxFileName = \"/home/the/code/my_github/StackMERN/client/src/components/PostDetails/CommentSection.jsx\";\nimport React, { useState, useRef } from 'react';\nimport { Typography, TextField, Button } from '@material-ui/core/';\nimport { useDispatch } from 'react-redux';\nimport { commentPost } from '../../actions/posts';\nimport useStyles from './styles';\n\nconst CommentSection = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const user = JSON.parse(localStorage.getItem('profile')); // comments từ database\n\n  const [comments, setComments] = useState(post === null || post === void 0 ? void 0 : post.comments); // comment từ nhập dữ liệu\n\n  const [comment, setComment] = useState(''); // chức năng tự động cuộn xuống dưới khi comment mới nhất đc add\n\n  const commentsRef = useRef(); // thêm comment\n\n  const handleComment = async () => {\n    var _user$result;\n\n    const newComment = `${user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name}: ${comment}`;\n    const newComments = await dispatch(commentPost(newComment, post._id));\n    setComment('');\n    setComments(newComments);\n    commentsRef.current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.commentsOuterContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.commentsInnerContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, \"Comments\"), comments === null || comments === void 0 ? void 0 : comments.map((c, i) => /*#__PURE__*/React.createElement(Typography, {\n    key: i,\n    gutterBottom: true,\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 29\n    }\n  }, c.split(': ')[0]), c.split(':')[1])), /*#__PURE__*/React.createElement(\"div\", {\n    ref: commentsRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '70%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, \"Write a comment\"), /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    rows: 4,\n    variant: \"outlined\",\n    label: \"Comment\",\n    multiline: true,\n    value: comment,\n    onChange: e => setComment(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      marginTop: '10px'\n    },\n    fullWidth: true,\n    disabled: !comment.length,\n    color: \"primary\",\n    variant: \"contained\",\n    onClick: handleComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, \"Comment\"))));\n};\n\nexport default CommentSection;","map":{"version":3,"sources":["/home/the/code/my_github/StackMERN/client/src/components/PostDetails/CommentSection.jsx"],"names":["React","useState","useRef","Typography","TextField","Button","useDispatch","commentPost","useStyles","CommentSection","post","dispatch","classes","user","JSON","parse","localStorage","getItem","comments","setComments","comment","setComment","commentsRef","handleComment","newComment","result","name","newComments","_id","current","scrollIntoView","behavior","commentsOuterContainer","commentsInnerContainer","map","c","i","split","width","e","target","value","marginTop","length"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react'\nimport { Typography, TextField, Button } from '@material-ui/core/'\nimport { useDispatch } from 'react-redux'\n\nimport { commentPost } from '../../actions/posts'\nimport useStyles from './styles'\n\nconst CommentSection = ({ post }) => {\n    const dispatch = useDispatch()\n    const classes = useStyles()\n    \n    const user = JSON.parse(localStorage.getItem('profile'))\n\n    // comments từ database\n    const [comments, setComments] = useState(post?.comments)\n    // comment từ nhập dữ liệu\n    const [comment, setComment] = useState('')\n\n    // chức năng tự động cuộn xuống dưới khi comment mới nhất đc add\n    const commentsRef = useRef()\n\n    // thêm comment\n    const handleComment = async () => {\n        const newComment = `${user?.result?.name}: ${comment}`\n        const newComments = await dispatch(commentPost(newComment, post._id))\n\n        setComment('')\n        setComments(newComments)\n\n        commentsRef.current.scrollIntoView({ behavior: 'smooth' })\n    }\n\n    return (\n        <div>\n            <div className={classes.commentsOuterContainer}>\n                <div className={classes.commentsInnerContainer}>\n                    <Typography gutterBottom variant=\"h6\">Comments</Typography>\n                    {comments?.map((c, i) => (\n                        <Typography key={i} gutterBottom variant=\"subtitle1\">\n                            {/* [0] là tên user */}\n                            <strong>{c.split(': ')[0]}</strong>\n                            {/* [1] là comment của user đó */}\n                            {c.split(':')[1]}\n                        </Typography>\n                    ))}\n                <div ref={commentsRef} />\n                </div>\n                <div style={{ width: '70%' }}>\n                <Typography gutterBottom variant=\"h6\">Write a comment</Typography>\n                <TextField \n                    fullWidth \n                    rows={4} \n                    variant=\"outlined\" \n                    label=\"Comment\" \n                    multiline \n                    value={comment} \n                    onChange={(e) => setComment(e.target.value)}\n                />\n                <br />\n                <Button \n                    style={{ marginTop: '10px' }} \n                    fullWidth \n                    disabled={!comment.length} \n                    color=\"primary\" \n                    variant=\"contained\" \n                    onClick={handleComment}\n                >\n                    Comment\n                </Button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default CommentSection\n"]},"metadata":{},"sourceType":"module"}